<!-- XLSX -->
<script src="/javascripts/xlsx.full.min.js"></script>

<script>
    $(document).ready(function () {
        initialize();
        loadtable();
        var dataArr = [];
        var dataTable = null;

        $.ajax({
            type: "POST",
            url: "/items/brandnamedepartment",
            data: { department: 'IT' },
            success: function (result) {
                console.log(result.data);
                var data = result.data;

                $.each(data, function (key, item) {
                    var options = new Option(item.brandname, item.brandname);
                    $(options).html(item.brandname);
                    $('#brandname').append(options);
                    console.log(item.brandname);
                });
            },
            error: function (result) {
                alert('error: ' + result.data);
            }
        });
        $(document).on('click', "#saveBtn", function () {
            var serial = $('#serial').val();
            var brandname = $('#brandname').val();
            var itemtype = $('#itemtype').val();

            var data = [];
            data.push({
                serial: serial,
                brandname: brandname,
                itemtype: itemtype,
            })

            SaveData(data, 'button', 0);
        });

        $(document).on('change', "#brandname", function () {
            var brandname = $('#brandname').val();
            $("#itemtype").empty();

            $.ajax({
                type: "POST",
                url: "/items/itemtype",
                data: { brandname: brandname },
                success: function (result) {
                    var data = result.data;
                    console.log(result.data);

                    $.each(data, function (key, item) {
                        var options = new Option(item.itemname, item.itemname);
                        $(options).html(item.itemname);
                        $('#itemtype').append(options);
                        console.log(item.itemname);
                    });
                },
                error: function (result) {
                    alert('error: ' + result.data);
                }
            });
        });

        $(document).on('click', "#upload", async function () {
            // var data = getExcel_data('C:\Users\5L Solutions\Documents\DATA\test.xlsx', 'sheet 1');
            // console.log(data);
            await UploadProcess();
        })

        function initialize() {
            var progressbar = document.getElementById('progressbar');
            progressbar.max = 100;
            progressbar.value = 0;
        };

        async function UploadProcess() {
            //Reference the FileUpload element.
            var fileUpload = document.getElementById("fileUpload");

            //Validate whether File is valid Excel file.
            var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xls|.xlsx|.csv|.ods)$/;
            if (regex.test(fileUpload.value.toLowerCase())) {
                if (typeof (FileReader) != "undefined") {
                    var reader = new FileReader();

                    //For Browsers other than IE.
                    if (reader.readAsBinaryString) {
                        reader.onload = function (e) {
                            GetTableFromExcel(e.target.result);
                        };
                        reader.readAsBinaryString(fileUpload.files[0]);
                    } else {
                        //For IE Browser.
                        reader.onload = function (e) {
                            var data = "";
                            var bytes = new Uint8Array(e.target.result);
                            for (var i = 0; i < bytes.byteLength; i++) {
                                data += String.fromCharCode(bytes[i]);
                            }
                            GetTableFromExcel(data);
                        };
                        reader.readAsArrayBuffer(fileUpload.files[0]);
                    }
                } else {
                    alert("This browser does not support HTML5.");
                }
            } else {
                alert("Please upload a valid Excel file.");
            }
        };

        async function GetTableFromExcel(data) {
            //Read the Excel File data in binary
            var workbook = XLSX.read(data, {
                type: 'binary'
            });

            //get the name of First Sheet.
            var Sheet = workbook.SheetNames[0];

            //Read all rows from First Sheet into an JSON array.
            var excelRows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[Sheet]);
            var columns = Object.keys(excelRows[0]);
            progressbar.max = excelRows.length;


            //Create a HTML Table element.
            var myTable = document.createElement("table");
            myTable.border = "1";

            //Add the header row.
            var row = myTable.insertRow(-1);

            //Add the header cells.
            var headerCell = document.createElement("TH");
            for (var j = 0; j < columns.length; j++) {
                headerCell = document.createElement("TH");
                headerCell.innerHTML = columns[j];
                row.appendChild(headerCell);
            }

            var dataExcelArr = [];
            //Add the data rows from Excel file.
            for (var i = 0; i < excelRows.length; i++) {
                //Add the data row.
                var data = [];
                var row = myTable.insertRow(-1);
                for (var j = 0; j < columns.length; j++) {
                    var cell = row.insertCell(-1);
                    cell.innerHTML = excelRows[i][columns[j]];
                    await data.push({
                        item: excelRows[i][columns[j]]
                    });
                }
                dataExcelArr.push({
                    serial: data[0].item,
                    brandname: data[1].item,
                    itemtype: data[2].item,
                });

            }
            // console.log(dataExcelArr)

            await excelDataSave(dataExcelArr);

            // var ExcelTable = document.getElementById("ExcelTable");
            // ExcelTable.innerHTML = "";
            // ExcelTable.appendChild(myTable);
        };

        async function SaveData(data, caller, count) {
            var serial = '';
            var brandname = '';
            var itemtype = '';
            var receivedby = '<%= fullname%>';
            var receiveddate = '<%= date%>';
            var deployto = deployto == null ? '' : '';
            var deployby = deployby == null ? '' : '';
            var deploydate = deploydate == null ? '' : '';
            var ticket = ticket == null ? '' : '';
            var pulloutitembrand = pulloutitembrand == null ? '' : '';
            var pulloutitemtype = pulloutitemtype == null ? '' : '';
            var pulloutitemsn = pulloutitemsn == null ? '' : '';
            var transferstatus = transferstatus == null ? 'FALSE' : '';
            var transferdetails = transferdetails == null ? '' : '';
            var createdby = '<%= fullname%>';
            var createddate = '<%= date%>';

            if (caller == 'button') {
                serial = data[0].serial;
                brandname = data[0].brandname;
                itemtype = data[0].itemtype;
            }

            console.log(`${serial} ${brandname} ${itemtype}`);

            var message = "";

            if (serial == "") { message += "Serial " }
            if (brandname == "") { message += "Brand Name " }
            if (itemtype == "") { message += "Item Type " }


            if (message != "") { warning("Warning!", "Must fill-up " + message + " field!") }
            else {
                dataArr.push({
                    'serial': serial,
                    'brandname': brandname,
                    'itemtype': itemtype,
                    'receivedby': receivedby,
                    'receiveddate': receiveddate,
                    'deployto': deployto,
                    'deployby': deployby,
                    'deploydate': deploydate,
                    'ticket': ticket,
                    'pulloutitembrand': pulloutitembrand,
                    'pulloutitemtype': pulloutitemtype,
                    'pulloutitemsn': pulloutitemsn,
                    'transferstatus': transferstatus,
                    'transferdetails': transferdetails,
                    'createdby': createdby,
                    'createddate': createddate,
                });

                var data = JSON.stringify(dataArr, null, 2);

                showloader();
                $.ajax({
                    type: "POST",
                    url: "/equipment/save",
                    data: {
                        serial: serial,
                        brandname: brandname,
                        itemtype: itemtype,
                        data: data
                    },
                    success: function (result) {
                        loadtable();
                        success('Saved!', 'Data saved!')
                        dataArr = [];
                    },
                    error: function (result) {
                        error(result.data);
                    }
                });
            }
        };

        async function excelDataSave(data) {
            var dataraw = JSON.stringify(data, null, 2);

            showloader();

            await $.ajax({
                type: "POST",
                url: "/equipment/saveexceldata",
                data: {
                    data: dataraw
                },
                success: function (result) {
                    // success('Saved!', 'Data saved!')
                    // $('#item-tbl').DataTable().ajax.reload();
                    loadtable();
                    dataArr = [];
                },
                error: function (result) {
                    error(result.data);
                }
            });

        }

        function loadtable() {
            showloader();
            dataTable = $('#item-tbl').DataTable({
                'destroy': true,
                'processing': true,
                'serverSide': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollY': 400,
                'scrollCollapse': true,
                'serverMethod': 'GET',
                'ajax': {
                    'url': '/equipment/load'
                },
                'columns': [
                    { data: 'serial' },
                    { data: 'brandname' },
                    { data: 'itemtype' },
                    { data: 'receivedby' },
                    { data: 'receiveddate' },
                ],
                initComplete: function () {
                    console.log('init complete');
                    hideload();
                }
            });
        };
    })
</script>