<script>
    $(document).ready(function () {
        var filename = '';
        var requestid = '';
        var personel = '';
        var date = '';
        var dataTable;
        var dataTable2;
        let requestdate = '';
        let requestby = '';
        let controlno = '';

        EquipmentRequestLoadTables();

        LoadRequestList();
        function LoadRequestList() {
            $.ajax({
                type: "GET",
                url: "/equipment/getitemrequest",
                success: function (result) {
                    console.log(result);
                    document.getElementById('itequipmentrequest').textContent = result.data;
                },
                error: function (result) {
                    alert('error: ' + result.data);
                }
            });

            $.ajax({
                type: "GET",
                url: "/equipment/gettransferrequest",
                success: function (result) {
                    console.log(result);
                    document.getElementById('equipmentrequesttransfer').textContent = result.data;
                },
                error: function (result) {
                    alert('error: ' + result.data);
                }
            });

            $.ajax({
                type: "GET",
                url: "/cabling/materialcablingrequest",
                success: function (result) {
                    console.log(result);
                    document.getElementById('cablingequipmentrequest').textContent = result.data;
                },
                error: function (result) {
                    alert('error: ' + result.data);
                }
            });
        }

        function EquipmentRequestLoadTables() {
            showloader();

            //#region IT EQUIPMENT REQUEST
            dataTable = $('#equipment-item-tbl').DataTable({
                'destroy': true,
                'processing': true,
                'serverSide': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollY': 400,
                'scrollCollapse': true,
                'serverMethod': 'GET',
                'ajax': {
                    'url': '/requestequipment/load',
                    'dataSrc': (json) => {
                        var finalData = [];
                        var data = json.data;
                        var details = '';
                        var createddate = '';
                        var status = '';
                        var personel = '';
                        var controlid = '';

                        // console.log(data);
                        $.each(data, (key, item) => {
                            console.log(`${item.requestby} ${item.requestdate} ${item.status}`);
                            personel = item.requestby;
                            createddate = item.requestdate;
                            status = item.status;
                            controlid = item.requestid;

                            var datajson = JSON.parse(item.details)
                            $.each(datajson, (key, item) => {
                                console.log(`${item.store} ${item.ticket} ${item.brandname} ${item.itemtype} ${item.quantity} ${item.remarks}`);
                                details += `TICKET:${item.ticket}   STORE: ${item.store}    BRANDNAME:${item.brandname} ITEMTPE:${item.itemtype}    QUANTITY:${item.quantity}   REMARKS:${item.remarks}<br/>`;
                            })

                            if (status == "PND") {
                                action = '<button class="assign-btn" id="assignBtn" name="assignBtn">ASSIGN SERIAL</button>'
                            }
                            if (status == 'FAPR') {
                                action = '<button class="approve-btn" id="approvedBtn" name="approvedBtn">APPROVED</button><br><button class="edit-btn" id="editBtn" name="editBtn">EDIT</button><br><button class="edit-btn" id="detailsBtn" name="detailsBtn">DETAILS</button>'
                            }

                            if (status == 'ALLOC') {
                                action = '<button class="approve-btn" id="deploybtn" name="deploybtn">DEPLOY</button><br><button class="edit-btn" id="printRequestBtn" name="printRequestBtn">PRINT</button><br><button class="edit-btn" id="cancelRequestBtn" name="cancelRequestBtn">CANCEL</button>'
                            }

                            finalData.push({
                                personel: personel,
                                details: details,
                                controlno: controlid,
                                createddate: createddate,
                                status: item.remarks,
                                action: action
                            })

                            details = '';
                        })

                        return finalData;
                    },
                },
                'columnDefs': [{
                    targets: 1,
                    className: 'td-indent',
                }],
                'columns': [
                    { data: 'createddate' },
                    { data: 'personel' },
                    { data: 'controlno' },
                    { data: 'details' },
                    { data: 'status' },
                    { data: 'action' }
                ],
                initComplete: function () {
                    console.log('init complete');
                    hideload();
                }
            });
            //#endregion

            //#region EQUIPMENT TRANSFER REQUEST
            dataTable2 = $('#transfer-equipment-item-tbl').DataTable({
                'destroy': true,
                'processing': true,
                'serverSide': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollY': 400,
                'scrollCollapse': true,
                'serverMethod': 'GET',
                'ajax': {
                    'url': '/transfer/load',
                    'dataSrc': (result) => {
                        var finalData = [];
                        var data = result.data;
                        var details = '';

                        $.each(data, (key, item) => {
                            let datajson = JSON.parse(item.details);

                            $.each(datajson, (key, item) => {
                                details += `BRAND: ${item.brand} TYPE: ${item.itemtype} SERIAL: ${item.serial}<br>`;
                            })

                            finalData.push({
                                detailid: item.detailid,
                                date: item.prepareddate,
                                personel: item.preparedby,
                                details: details,
                                locationfrom: item.locationfrom,
                                locationto: item.locationto,
                                remarks: item.remarks,
                                status: item.status,
                                action: action = `<button class="approve-btn" id="approveTransferBtn" name="approveTransferBtn">APPROVED</button><button class="edit-btn" id="transferPrinttBtn" name="transferPrinttBtn">PRINT</button>`
                            });
                        })

                        return finalData;
                    }
                },
                'columnDefs': [{
                    targets: 2,
                    className: 'td-indent',
                }],
                'columns': [
                    { data: 'detailid' },
                    { data: 'date' },
                    { data: 'personel' },
                    { data: 'details' },
                    { data: 'locationfrom' },
                    { data: 'locationto' },
                    { data: 'remarks' },
                    { data: 'status' },
                    { data: 'action' },
                ],
                initComplete: function () {
                    console.log('init complete');
                    hideload();
                }
            });
            //#endregion

            //#region CABLING EQUIPMENT REQUEST
            dataTable3 = $('#cabling-equipment-item-tbl').DataTable({
                'destroy': true,
                'processing': true,
                'serverSide': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollY': 400,
                'scrollCollapse': true,
                'serverMethod': 'GET',
                'ajax': {
                    'url': '/cablingrequest/load',
                    'dataSrc': (json) => {
                        var finalData = [];
                        var data = json.data;
                        var details = '';
                        var createddate = '';
                        var status = '';
                        var requestor = '';
                        var remarks = '';
                        var requestid = '';

                        console.log(data);
                        $.each(data, (key, item) => {
                            requestor = item.personel;
                            createddate = item.requestdate;
                            status = item.status;
                            remarks = item.remarks;
                            requestid = item.requestid;

                            var detailsJson = JSON.parse(item.details);
                            // console.log(item.details);
                            $.each(detailsJson, (key, item) => {
                                console.log(`BRAND: ${item.brandname} ITEM TYPE: ${item.itemtype} ITEM COUNT: ${item.itemcount}`);
                                details += `BRAND: ${item.brandname} ITEM TYPE: ${item.itemtype} ITEM COUNT: ${item.itemcount}<br/>`;
                            })

                            finalData.push({
                                requestid: requestid,
                                date: createddate,
                                personel: requestor,
                                details: details,
                                remarks: remarks,
                                status: status,
                                action: action = `<button class="approve-btn" id="approveBtn-cabling" name="approveBtn-cabling">APPROVED</button><button class="edit-btn" id="PrinttBtn-cabling" name="PrinttBtn-cabling">PRINT</button>`
                            })

                            details = '';
                        })

                        return finalData;
                    },
                },
                'columnDefs': [{
                    targets: 2,
                    className: 'td-indent',
                }],
                'columns': [
                    { data: 'requestid' },
                    { data: 'date' },
                    { data: 'personel' },
                    { data: 'details' },
                    { data: 'remarks' },
                    { data: 'status' },
                    { data: 'action' },
                ],
                initComplete: function () {
                    console.log('init complete');
                    hideload();
                }
            });
            //#endregion

            //#region IT EQUIPMENT STOCK TABLE
            dataTableITEquipment = $('#IT-Equipment_Tbl').DataTable({
                'destroy': true,
                'processing': true,
                'serverSide': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollY': 400,
                'scrollCollapse': true,
                'serverMethod': 'GET',
                'ajax': {
                    'url': '/equipment/GetEquipmentSummary'
                },
                'columns': [
                    { data: 'itemtype' },
                    { data: 'itemcount' },
                ],
                initComplete: function () {
                    console.log('init complete');
                    hideload();
                }
            });
            //#endregion

            //#region EQUIPMENT CABLING STOCK TABLE
            dataTableITEquipment = $('#Cabling-Equipment_Tbl').DataTable({
                'destroy': true,
                'processing': true,
                'serverSide': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollY': 400,
                'scrollCollapse': true,
                'serverMethod': 'GET',
                'ajax': {
                    'url': '/cabling/GetCablingEquipmentSummary'
                },
                'columns': [
                    { data: 'itemtype' },
                    { data: 'itemcount' },
                ],
                initComplete: function () {
                    console.log('init complete');
                    hideload();
                }
            });
            //#endregion

            //#region NEED TO RESTOCK
            needrestocktbl = $('#restockstble').DataTable({
                'destroy': true,
                'processing': true,
                'serverSide': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollY': 400,
                'scrollCollapse': true,
                'serverMethod': 'GET',
                'ajax': {
                    'url': '/cablingitemmaster/getmincount'
                },
                'columns': [
                    { data: 'brandname' },
                    { data: 'itemtype' },
                    { data: 'itemcount' },
                    { data: 'minstocks' },
                ],
                initComplete: function () {
                    console.log('init complete');
                    hideload();
                }
            });
            //#endregion
        }

        var modal = document.getElementById("requestModal");
        var modaltransfer = document.getElementById("transferModal");
        var modalcabling = document.getElementById("cablingRequestModal");
        var span = document.getElementsByClassName("close")[0];
        var span2 = document.getElementById("transfermodalclose");
        var span3 = document.getElementById("cablingmodalclose");

        var modalrequestprint = document.getElementById("requestPringModal");
        var requestprintspan = document.getElementById("requestprintspan");

        var deploymodal = document.getElementById("deployModal");
        var deployspan = document.getElementById("deployspan");

        var detailsModal = document.getElementById("detailsModal");
        var detailModalSpan = document.getElementById("detailModalSpan");

        detailModalSpan.onclick = function () {
            detailsModal.style.display = "none";
        }

        span.onclick = function () {
            modal.style.display = "none";
        }

        span2.onclick = function () {
            modaltransfer.style.display = "none";
        }

        span3.onclick = function () {
            modalcabling.style.display = "none";
        }

        deployspan.onclick = function () {
            deploymodal.style.display = "none";
        }

        requestprintspan.onclick = function () {
            modalrequestprint.style.display = "none";
        }

        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
            if (event.target == modaltransfer) {
                modaltransfer.style.display = "none";
            }
            if (event.target == modalcabling) {
                modalcabling.style.display = "none";
            }
            if (event.target == modalrequestprint) {
                modalrequestprint.style.display = "none";
            }
            if (event.target == deploymodal) {
                deploymodal.style.display = "none";
            }

            if (event.target == detailsModal) {
                detailsModal.style.display = "none";
            }
        }

        let transfer_ID = '';
        let transfer_DATE = '';
        let transfer_PERSONEL = '';
        let transfer_SITE = '';
        $('#transfer-equipment-item-tbl tbody').on('click', 'tr', function () {
            var data = [];
            $(this).closest('tr').find('td').each(function () {
                data.push([$(this).text()]);
            })

            transfer_ID = data[0];
            transfer_DATE = data[1];
            transfer_PERSONEL = data[2];
            transfer_SITE = data[5];

        })

        $('#cabling-equipment-item-tbl').on('click', 'td', function () {
            var data = [];
            $(this).closest('tr').find('td').each(function () {
                data.push([$(this).text()]);
            })
            cabling_requestid = data[0];

        })

        $('#equipment-item-tbl tbody').on('click', 'tr', function () {

            var data = dataTable.row(this).data();
            filename = `${data.personel}_${data.createddate}.json`;
            personel = data.personel;
            date = data.createddate;

            var dataRow = [];
            $(this).closest('tr').find('td').each(function () {
                dataRow.push([$(this).text()]);

            });

            requestdate = dataRow[0];
            requestby = dataRow[1];
            controlno = dataRow[2];

            console.log(dataRow);

        })

        $('#requesttbl tbody').on('click', 'tr', function (e) {
            e.preventDefault();

            if ($(this).attr('edit_type') == 'button') {
                return false;
            }

            //make div editable
            $(this).closest('div').attr('contenteditable', 'true');
            //add bg css
            $(this).addClass('edit-cost').css('padding', '5px');

            $(this).focus();
        });

        $('#deployitemlist tbody').on('click', 'tr', function (e) {
            e.preventDefault();

            if ($(this).attr('edit_type') == 'button') {
                return false;
            }

            //make div editable
            $(this).closest('div').attr('contenteditable', 'true');
            //add bg css
            $(this).addClass('edit-cost').css('padding', '5px');

            $(this).focus();
        });

        $(document).on('change', "#brandname", function () {
            var brandname = $('#brandname').val();
            $("#itemtype").empty();

            $.ajax({
                type: "POST",
                url: "/items/itemtype",
                data: { brandname: brandname },
                success: function (result) {
                    var data = result.data;
                    console.log(result.data);

                    $.each(data, function (key, item) {
                        var options = new Option(item.itemname, item.itemname);
                        $(options).html(item.itemname);
                        $('#itemtype').append(options);
                        console.log(item.itemname);
                    });
                },
                error: function (result) {
                    alert('error: ' + result.data);
                }
            });
        });

        let _input_details = [];
        $(document).on('click', '#addDetailBtn', function () {
            let requestby = $('#personel').val();
            let store = $('#store').val();
            let ticket = $('#ticket').val();
            let brandname = $('#brandname').val();
            let itemtype = $('#itemtype').val();
            let quantity = $('#quantity').val();
            let remarks = $('#remarks').val();
            var action = `<button class="circle-btn" id="removedetailBtn" name="removedetailBtn">
                                <div class="delete-line"></div>
                            </button>`;


            var message = '';

            if (requestby == '-') { message += 'FE NAME ' };
            if (store == '-') { message += 'STORE ' };
            if (ticket == '-') { message += 'TICKET ' };
            if (brandname == '-') { message += 'BRANDNAME ' };
            if (itemtype == '-') { message += 'ITEM TYPE ' };
            if (quantity == '-') { message += 'QUANTITY ' };
            if (remarks == '-') { message += 'REMARKS ' };

            if (message != '') {
                warning('Empty', `Required to fillup ${message}`);
            }
            else {
                if (_input_details.length == 0) {
                    _input_details.push({
                        ticket: ticket,
                        store: store,
                        brandname: brandname,
                        itemtype: itemtype
                    });

                    requestdetail.row.add([requestby,
                        store,
                        ticket,
                        brandname,
                        itemtype,
                        quantity,
                        remarks,
                        action]).draw(false);

                    requestitems.row.add([
                        ticket,
                        store,
                        brandname,
                        itemtype,
                        '',
                        action]).draw(false);
                }
                else {
                    if (!_input_details.map(item => {
                        if (item.ticket == ticket && item.itemtype == itemtype) {
                            return `${item.ticket}${item.itemtype}`
                        }
                    }).includes(`${ticket}${itemtype}`)) {
                        _input_details.push({
                            ticket: ticket,
                            store: store,
                            brandname: brandname,
                            itemtype: itemtype
                        });

                        requestdetail.row.add([requestby,
                            store,
                            ticket,
                            brandname,
                            itemtype,
                            quantity,
                            remarks,
                            action]).draw(false);

                        requestitems.row.add([
                            ticket,
                            store,
                            brandname,
                            itemtype,
                            '',
                            action]).draw(false);
                    }
                    else {
                        warning(`Already request ${itemtype} on ticket number ${ticket}...`)
                    }
                }
            }
        })

        $(document).on('click', '#updateDetailBtn', function () {
            let _details = $('#request-details-tbl tr');
            let _items = $('#detail-request-items-table tr');
            let _data_items = [];
            let _data_details = [];
            var message = '';

            console.log(rem_data);
            //#region DETAILS
            for (x = 1; x < _details.length; x++) {
                console.log(_details[x].innerText);
                var innerData = _details[x].innerText;
                innerData = innerData.split("\t");

                _data_details.push({
                    personel: innerData[0],
                    store: innerData[1],
                    ticket: innerData[2],
                    brandname: innerData[3],
                    itemtype: innerData[4],
                    quantity: innerData[5],
                    remarks: innerData[6],
                    createddate: '<%= date%>',
                    status: 'PENDING'
                });
            }
            //#endregion

            //#region ITEMS
            var index = 1;
            for (x = 1; x < _items.length; x++) {
                console.log(_items[x].innerText);
                var innerData = _items[x].innerText;
                innerData = innerData.split("\t");

                if (innerData[4] == "") {
                    message += `${innerData[0]}, `;
                } else {
                    _data_items.push({
                        ticket: innerData[0],
                        store: innerData[1],
                        brandname: innerData[2],
                        itemtype: innerData[3],
                        serial: innerData[4],
                        status: 'ALLOCATE',
                        index: index,
                    });

                    index += 1;
                }

            }
            //#endregion
            // _data_items = JSON.stringify(_data_items, null, 2);
            // _data_details = JSON.stringify(_data_details, null, 2);
            // console.log(`ITEMS: ${_data_items}`);
            // console.log(`DETAILS: ${_data_details}`);

            if (_data_items.length == 0) {
                warning('Empty', 'If you want to cancel all the request, just DEPLOY it wihtout ATF or any input to return to ACTIVE');
            } else {
                if (message != '') {
                    warning('Empty', `No serial assign at ticket no. ${message}`);
                }
                else {
                    $.ajax({
                        type: 'POST',
                        url: '/requestequipment/updatedetails',
                        data: {
                            requestby: requestby,
                            requestdate: requestdate,
                            controlno: controlno,
                            items: _data_items,
                            details: _data_details,
                            remove: rem_data,
                        },
                        success: function (result) {
                            console.log(result.msg);
                            if (result.msg == 'success') {
                                success('Successfull', 'Update details successfully');
                                EquipmentRequestLoadTables();
                            }

                            if (result.msg == 'serials') {
                                warning('Not Exist', `Please check serial/s ${result.data}. Go to REPORTS >> SEARCH to check serial exist on database.`)
                            }

                            if (result.msg == 'items') {
                                var data = result.data;
                                var message = '';
                                data = JSON.parse(data);

                                $.each(data, (key, item) => {
                                    message += `[Control ID: ${item.requestid} (${item.requestby} ${item.requestdate}) Ticket:${item.ticket} Store:${item.store} Serial:${item.serial}]\n`;
                                })
                                warning('Exist', `There are certain items that have already been allocated but have not yet been returned. \n ${message}`);
                            }
                        },
                        error: function (error) {
                            warning('Error', error);
                        }
                    });
                }

            }

            _data_items = [];
            _data_details = [];
            rem_data = [];
        })

        $('#detail-request-items-table tbody').on('click', 'tr', function (e) {
            e.preventDefault();

            if ($(this).attr('edit_type') == 'button') {
                return false;
            }

            //make div editable
            $(this).closest('div').attr('contenteditable', 'true');
            //add bg css
            $(this).addClass('edit-cost').css('padding', '5px');

            $(this).focus();
        });

        let detailrow = '';
        let detailbrand = '';
        let detailitem = '';

        var requestdetail = $('#request-details-tbl').DataTable({
            'destroy': true,
            'paging': false,
            'searching': false,
            'info': false,
            'scrollCollapse': true,
        });

        var requestitems = $('#detail-request-items-table').DataTable({
            'destroy': true,
            'paging': false,
            'searching': false,
            'info': false,
            'scrollCollapse': true,
        });

        $('#request-details-tbl tbody').on('click', 'tr', function (e) {
            var data = [];
            detailrow = $(this).closest('tr');
            $(this).closest('tr').find('td').each(function () {
                data.push([$(this).text()]);

            });

            detailbrand = data[3];
            detailitem = data[4];

            console.log(data);
        });

        $(document).on('click', '#removedetailBtn', function () {
            // var items = [];
            // var index = 0;
            // $('#detail-request-items-table tbody').find('tr').each(function () {
            //     var datatd = [];
            //     $(this).find('td').each(function () {
            //         datatd.push([$(this).text()]);
            //     })

            //     let ticket = datatd[0];
            //     let store = datatd[1];
            //     let brand = datatd[2];
            //     let type = datatd[3];
            //     let serial = datatd[4];

            //     items.push({
            //         ticket: ticket,
            //         store: store,
            //         brand: brand,
            //         type: type,
            //         serial: serial,
            //         index: index
            //     });

            //     index += 1;
            // })

            // console.log(detailbrand);
            // console.log(detailitem);
            // console.log(items);

            var _detailitem = detailitem[0];
            requestitems.rows().every(function () {
                var rowdata = this.data();
                console.log(rowdata[3]);
                console.log(_detailitem);

                if (_detailitem === rowdata[3]) {
                    rem_data.push({
                        controlno: controlno,
                        serial: rowdata[4],
                    })
                    this.remove();
                }
            });

            requestitems.draw();
            detailrow.remove();
        })

        let itemsrow = '';
        let itemrow_type = '';
        let itemrow_brand = '';
        let rem_data = [];
        $('#detail-request-items-table tbody').on('click', 'tr', function (e) {
            var data = [];
            itemsrow = $(this).closest('tr');
            $(this).closest('tr').find('td').each(function () {
                data.push([$(this).text()]);

            });


            itemrow_type = data[3];
            itemrow_brand = data[2];

            rem_data.push({
                controlno: controlno,
                serial: data[4],
            })

        });

        $(document).on('click', '#removeitemsBtn', function () {
            var details = [];

            var index = 0;
            $('#request-details-tbl tbody').find('tr').each(function () {
                var datatd = [];
                $(this).find('td').each(function () {
                    datatd.push([$(this).text()]);
                })

                let requestby = datatd[0];
                let store = datatd[1];
                let ticket = datatd[2];
                let brand = datatd[3];
                let type = datatd[4];
                let total = parseInt(datatd[5]);
                let remarks = datatd[6];

                details.push({
                    requestby,
                    store,
                    ticket,
                    brand,
                    type,
                    total,
                    remarks,
                    index
                });

                index += 1;
            })

            console.log(itemrow_type);
            console.log(itemrow_brand);
            console.log(details);

            requestdetail.clear().draw();

            $.each(details, (key, item) => {
                // console.log(item.type[0]);
                var itemtype = item.type[0];
                var itemrow = itemrow_type[0]

                if (itemrow === itemtype) {
                    var quantity = item.total - 1;



                    console.log(`type: ${itemrow} quantity: ${quantity}`)

                    if (quantity > 0) {
                        var action = `<button class="circle-btn" id="removedetailBtn" name="removedetailBtn">
                                <div class="delete-line"></div>
                            </button>`;
                        requestdetail.row.add([item.requestby,
                        item.store,
                        item.ticket,
                        item.brand,
                        item.type,
                            quantity,
                        item.remarks,
                            action]).draw(false);
                    }
                    else {
                        requestdetail.row(item.index).remove().draw();
                    }
                }
                else {
                    var action = `<button class="circle-btn" id="removedetailBtn" name="removedetailBtn">
                                <div class="delete-line"></div>
                            </button>`;
                    requestdetail.row.add([item.requestby,
                    item.store,
                    item.ticket,
                    item.brand,
                    item.type,
                    item.total,
                    item.remarks,
                        action]).draw(false);
                }
            })

            itemsrow.remove();
        })


        $('#requestModal').on('hidden.bs.modal', function (e) {
            EquipmentRequestLoadTables();
        });

        $(document).on('click', '#detailsBtn', function () {
            showloader();
            _input_details = [];
            requestdetail.clear().draw();
            requestitems.clear().draw();
            loadlist();

            const _fename = document.getElementById('personel');
            _fename.value = requestby;

            $.ajax({
                type: "POST",
                url: "/requestequipment/getrequestdetails",
                data: {
                    requestby: requestby,
                    requestdate: requestdate,
                    requestid: controlno,
                },
                success: function (result) {

                    console.log(result.data['details']);
                    console.log(result.data['items']);

                    var items = result.data['items'];
                    var details = result.data['details'];

                    $.each(details, (key, item) => {
                        var requestlist = item.details;
                        var action = `<button class="circle-btn" id="removedetailBtn" name="removedetailBtn">
                                                <div class="delete-line"></div>
                                            </button>`;
                        requestlist = JSON.parse(requestlist);
                        $.each(requestlist, (ket, value) => {
                            requestdetail.row.add([item.requestby,
                            value.store,
                            value.ticket,
                            value.brandname,
                            value.itemtype,
                            value.quantity,
                            value.remarks,
                                action]).draw(false);
                        })
                    })

                    $.each(items, (key, item) => {
                        var action = `<button class="circle-btn" id="removeitemsBtn" name="removeitemsBtn">
                                                <div class="delete-line"></div>
                                            </button>`;
                        requestitems.row.add([
                            item.ticket,
                            item.store,
                            item.brandname,
                            item.itemtype,
                            item.serial,
                            action]).draw(false);

                    })

                    setTimeout(() => {
                        hideload();
                        detailsModal.style.display = "block";
                    }, 1000);
                },
                error: function (result) {
                    alert('error: ' + result.data);
                }
            });


        })

        $(document).on('click', '#cancelRequestBtn', function () {
            $.ajax({
                type: 'POST',
                url: '/requestequipment/cancelrequest',
                data: {
                    requestby: requestby,
                    requestdate: requestdate,
                    requestid: controlno,
                },
                success: function () {
                    EquipmentRequestLoadTables();

                    success('Success', 'Cancel Request Successfull');
                },
                error: function (error) {
                    warning('Error', error);
                }
            })
        })

        $(document).on('click', "#printRequestBtn", function () {
            var requestitemTabel = $('#print-requesttbl').DataTable({
                'destroy': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollCollapse': true,
            });

            $.ajax({
                type: "POST",
                url: "/requestequipment/getdetails",
                data: {
                    requestby: requestby,
                    requestdate: requestdate,
                    requestid: controlno,
                },
                success: function (result) {
                    var data = result.data;

                    $.each(data, function (key, item) {
                        document.getElementById('requestid').innerText = item.requestid;
                        document.getElementById('requestdate').innerText = item.requestdate;
                    })
                },
                error: function (result) {
                    error('error: ' + result.data);
                }
            });

            $.ajax({
                type: "POST",
                url: "/requestequipment/getassign",
                data: {
                    requestby: requestby,
                    requestdate: requestdate,
                    requestid: controlno,
                },
                success: function (result) {
                    requestitemTabel.clear().draw();
                    var data = result.data;

                    console.log(data);
                    $.each(data, (key, item) => {
                        requestitemTabel.row.add([item.ticket, item.store, item.brandname, item.itemtype, item.serial]).draw(false);
                    })
                },
                error: function (result) {
                    error('error: ' + result.data);
                }
            });


            document.getElementById('officersig').innerText = '<%= fullname%>';
            document.getElementById('datesig').innerText = '<%= date%>';
            document.getElementById('requestbysig').innerText = personel;
            document.getElementById('requestdatesig').innerText = date;
            document.getElementById('checkersig').innerText = '<%= checker%>';
            document.getElementById('checkdatesig').innerText = date;

            modalrequestprint.style.display = 'block';
        })

        $(document).on('click', "#deploybtn", function () {
            var requestlistTabel = $('#deployitemlist').DataTable({
                'destroy': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollCollapse': true,
            });

            //request list
            $.ajax({
                type: "POST",
                url: "/requestequipment/getassign",
                data: {
                    requestby: requestby,
                    requestdate: requestdate,
                    requestid: controlno,
                },
                success: function (result) {
                    requestlistTabel.clear().draw();
                    var data = result.data;

                    console.log(result.data);

                    $.each(data, function (key, item) {
                        requestlistTabel.row.add([item.ticket, item.store, item.brandname, item.itemtype, item.serial, '', '', '', '', '']).draw(false);
                    })
                },
                error: function (result) {
                    error('error: ' + result.data);
                }
            });

            deploymodal.style.display = "block";
        })

        $(document).on('click', "#deployitemBtn", function () {
            console.log('clicked!');
            var data = $('#deployitemlist tr');
            var dataRaw = [];
            console.log(data);
            console.log(data.length);
            var message = '';

            var status = '';
            for (x = 1; x < data.length; x++) {
                console.log(data[x].innerText);
                var innerData = data[x].innerText;
                innerData = innerData.split("\t");

                if (innerData[5] == "") {

                    status = 'RETURNED';
                } else {
                    status = 'DEPLOYED';
                }

                dataRaw.push({
                    ticket: innerData[0],
                    store: innerData[1],
                    brandname: innerData[2],
                    itemtype: innerData[3],
                    serial: innerData[4],
                    trf: innerData[5],
                    pulloutbrand: innerData[6],
                    pulloutitemtype: innerData[7],
                    pulloutserial: innerData[8],
                    apo: innerData[9],
                    status: status,
                });

            }

            dataRaw = JSON.stringify(dataRaw, null, 2);
            console.log(dataRaw);

            $.ajax({
                type: "POST",
                url: "/requestequipment/deployitem",
                data: {
                    requestby: requestby,
                    requestdate: requestdate,
                    requestid: controlno,
                    data: dataRaw
                },
                success: function (result) {
                    success('Saved', 'Data Saved!');
                },
                error: function (result) {
                    alert('error: ' + result.data);
                }
            });

            // if (message != "") {
            //     warning(`TICKET/S: ${message} no serial assigned!`)
            // } else {

            // }


            EquipmentRequestLoadTables();
            deploymodal.style.display = "none";
        })

        $(document).on('click', "#returnBtn", function () {

        })

        $(document).on('click', "#printEquipmentRequestBtn", function () {
            console.log('clicked!');
            var printContents = document.getElementById('PrintArea').innerHTML;
            var originalContents = document.body.innerHTML;
            document.body.innerHTML = printContents;
            window.print();
            document.body.innerHTML = originalContents;
            location.reload();
        })

        $(document).on('click', "#saveBtn", function () {
            console.log('clicked!');
            var data = $('#requesttbl tr');
            var dataRaw = [];
            console.log(data);
            console.log(data.length);
            var message = '';

            var index = 1;
            for (x = 1; x < data.length; x++) {
                console.log(data[x].innerText);
                var innerData = data[x].innerText;
                innerData = innerData.split("\t");

                if (innerData[4] == "") {
                    message += `${innerData[0]}, `;
                } else {
                    dataRaw.push({
                        ticket: innerData[0],
                        store: innerData[1],
                        brandname: innerData[2],
                        itemtype: innerData[3],
                        serial: innerData[4],
                        status: 'ALLOCATE',
                        index: index,
                    });

                    index += 1;
                }

            }

            if (message != "") {
                warning(`TICKET/S: ${message} no serial assigned!`)
            } else {
                console.log(personel, date, dataRaw);
                dataRaw = JSON.stringify(dataRaw, null, 2);
                assignequipemnt(personel, date, dataRaw, controlno)
                modal.style.display = "none";
            }
        });

        function assignequipemnt(personel, date, data, controlid) {
            console.log(`${personel} ${date} ${data}`);
            $.ajax({
                type: "POST",
                url: "/requestequipment/assign",
                data: {
                    requestid: controlid,
                    personel: personel,
                    date: date,
                    data: data
                },
                success: function (result) {
                    console.log(result.msg);
                    if (result.msg == 'success') {
                        success('Saved!', 'Data saved!')
                        EquipmentRequestLoadTables();
                    }

                    if (result.msg == 'serials') {
                        warning('Not Exist', `Please check serial/s ${result.data}. Go to REPORTS >> SEARCH to check serial exist on database.`)
                    }

                    if (result.msg == 'items') {
                        var data = result.data;
                        var message = '';
                        data = JSON.parse(data);

                        $.each(data, (key, item) => {
                            message += `[Control ID: ${item.requestid} (${item.requestby} ${item.requestdate}) Ticket:${item.ticket} Store:${item.store} Serial:${item.serial}]\n`;
                        })
                        warning('Exist', `There are certain items that have already been allocated but have not yet been returned. \n ${message}`);
                    }
                },
                error: function (result) {
                    error(result.data);
                }
            });
        }

        $(document).on('click', "#approvedBtn", async function () {
            console.log('hit');
            showloader();
            $.ajax({
                type: "POST",
                url: "/requestequipment/approve",
                data: {
                    requestby: requestby,
                    requestdate: requestdate,
                    requestid: controlno,
                },
                success: function (result) {
                    success('Approved!', 'Request approved!')
                    EquipmentRequestLoadTables();
                    hideload();
                },
                error: function (result) {
                    error(result.data);
                }
            });
        });

        $(document).on('click', "#assignBtn", async function () {
            var requestlistTabel = $('#requestlist').DataTable({
                'destroy': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollCollapse': true,
            });

            var requestitemTabel = $('#requesttbl').DataTable({
                'destroy': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollCollapse': true,
            });
            var index = [];
            //request list
            $.ajax({
                type: "POST",
                url: "/requestequipment/getdetails",
                data: {
                    requestby: requestby,
                    requestdate: requestdate,
                    requestid: controlno,
                },
                success: function (result) {
                    requestlistTabel.clear().draw();
                    requestitemTabel.clear().draw();
                    var data = result.data;

                    console.log(result.data);

                    $.each(data, function (key, item) {
                        var datajson = item.details;

                        console.log(datajson);
                        datajson = JSON.parse(datajson);
                        $.each(datajson, function (key, value) {
                            requestlistTabel.row.add([value.ticket, value.itemtype, value.quantity]).draw(false);

                            var quantity = parseFloat(value.quantity);

                            for (x = 0; x < quantity; x++) {
                                requestitemTabel.row.add([value.ticket, value.store, value.brandname, value.itemtype, '']).draw(false);
                            }
                        })
                    })
                },
                error: function (result) {
                    error('error: ' + result.data);
                }
            });

            modal.style.display = "block";

        });

        $(document).on('click', "#editBtn", async function () {

            var requestlistTabel = $('#requestlist').DataTable({
                'destroy': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollCollapse': true,
            });

            var requestitemTabel = $('#requesttbl').DataTable({
                'destroy': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollCollapse': true,
            });


            $.ajax({
                type: "POST",
                url: "/requestequipment/getdetails",
                data: {
                    requestby: requestby,
                    requestdate: requestdate,
                    requestid: controlno,
                },
                success: function (result) {
                    requestlistTabel.clear().draw();
                    var data = result.data;

                    console.log(result.data);

                    $.each(data, function (key, item) {
                        var datajson = item.details;

                        console.log(datajson);
                        datajson = JSON.parse(datajson);
                        $.each(datajson, function (key, value) {
                            requestlistTabel.row.add([value.ticket, value.itemtype, value.quantity]).draw(false);
                        })
                    })
                },
                error: function (result) {
                    error('error: ' + result.data);
                }
            });

            $.ajax({
                type: "POST",
                url: "/requestequipment/getassign",
                data: {
                    requestby: requestby,
                    requestdate: requestdate,
                    requestid: controlno,
                },
                success: function (result) {
                    requestitemTabel.clear().draw();
                    var data = result.data;

                    $.each(data, (key, item) => {

                        requestitemTabel.row.add([item.ticket, item.store, item.brandname, item.itemtype, item.serial]).draw(false);
                    })
                },
                error: function (result) {
                    error('error: ' + result.data);
                }
            });

            modal.style.display = "block";
        });

        $(document).on('click', "#transferPrinttBtn", async function () {

            var t = $('#modalTransferItems').DataTable({
                'destroy': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollCollapse': true,
            });

            $.ajax({
                type: "POST",
                url: "/transfer/gettransferdetails",
                data: {
                    id: transfer_ID
                },
                success: function (result) {
                    var data = result.data;
                    console.log(result.data);
                    t.clear().draw();

                    $.each(data, function (key, item) {
                        t.row.add([item.itembrand, item.itemtype, item.serial]).draw(false);
                    })
                },
                error: function (result) {
                    alert('error: ' + result.data);
                }
            });

            modaltransfer.style.display = "block";
        })

        $(document).on('click', "#printBtn", function () {
            console.log('clicked!');
            var printContents = document.getElementById('transfer-PrintArea').innerHTML;
            var originalContents = document.body.innerHTML;
            document.body.innerHTML = printContents;
            window.print();
            document.body.innerHTML = originalContents;
            location.reload();
        })

        $(document).on('click', "#approveTransferBtn", function () {
            $.ajax({
                type: "POST",
                url: "/transfer/transferitems ",
                data: {
                    id: transfer_ID,
                    date: transfer_DATE,
                    preparedby: transfer_PERSONEL,
                    site: transfer_SITE,
                },
                success: function (result) {
                    success('Approved!', 'Transfer approved!')
                    EquipmentRequestLoadTables();
                },
                error: function (result) {
                    alert('error: ' + result.data);
                }
            });
        });

        $(document).on('click', "#approveBtn-cabling", function () {
            $.ajax({
                type: "POST",
                url: "/cablingrequest/approve",
                data: {
                    requestid: cabling_requestid
                },
                success: function (result) {
                    success('Approved!', 'Request approved!')

                },
                error: function (result) {
                    alert('error: ' + result.data);
                }
            });

            LoadRequestList();
            EquipmentRequestLoadTables();
        })

        let cabling_requestid = '';
        let cabling_requestdate = '';
        let cabling_requestby = '';
        let cabling_details = '';
        let cabling_remarks = '';
        let cabling_status = '';
        $('#cabling-equipment-item-tbl tbody').on('click', 'tr', function (e) {
            var data = [];
            $(this).closest('tr').find('td').each(function () {
                data.push([$(this).text()]);
            });

            console.log(data);

            cabling_requestid = data[0];
            cabling_requestdate = data[1];
            cabling_requestby = data[2];
            cabling_details = data[3];
            cabling_remarks = data[4];
            cabling_status = data[5];

        })

        $(document).on('click', "#PrinttBtn-cabling", function () {

            var t = $('#modalCablingItems').DataTable({
                'destroy': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollCollapse': true,
            });

            $.ajax({
                type: "POST",
                url: "/cablingrequest/getcablingrequestdetail",
                data: {
                    requestid: cabling_requestid
                },
                success: function (result) {
                    t.clear().draw();
                    $.each(result.data, function (key, item) {
                        // let cost = parseFloat(item.itemcost);
                        // let count = parseFloat(item.itemcount);
                        // let total = cost * count;

                        t.row.add([item.brandname, item.itemtype, item.quantity]).draw(false);
                    })

                    document.getElementById('requestby').innerText = cabling_requestby;
                    document.getElementById('approvedby').innerText = '<%= fullname%>';
                    document.getElementById('requestcablingdatesig').innerText = cabling_requestdate;
                    document.getElementById('approveddatesig').innerText = '<%= datetime%>';
                },
                error: function (result) {
                    alert('error: ' + result.data);
                }
            });

            modalcabling.style.display = "block";
        })

        $(document).on('click', "#cabling-printBtn", function () {
            console.log('clicked!');
            var printContents = document.getElementById('cabling-PrintArea').innerHTML;
            var originalContents = document.body.innerHTML;
            document.body.innerHTML = printContents;
            window.print();
            document.body.innerHTML = originalContents;
            location.reload();
        })

        function loadlist() {
            $.ajax({
                type: "POST",
                url: "/items/brandnamedepartment",
                data: { department: 'IT' },
                success: function (result) {
                    console.log(result.data);
                    var data = result.data;
                    $('#brandname').empty();

                    $.each(data, function (key, item) {
                        var options = new Option(item.brandname, item.brandname);
                        $(options).html(item.brandname);
                        $('#brandname').append(options);
                        console.log(item.brandname);
                    });
                },
                error: function (result) {
                    alert('error: ' + result.data);
                }
            });

            // $.ajax({
            //     type: "POST",
            //     url: "/personel/personelposition",
            //     data: { position: 'IT' },
            //     success: function (result) {
            //         console.log(result.data);
            //         var data = result.data;

            //         $.each(data, function (key, item) {
            //             var options = new Option(item.fullname, item.fullname);
            //             $(options).html(item.fullname);
            //             $('#personel').append(options);
            //             console.log(item.fullname);
            //         });
            //     },
            //     error: function (result) {
            //         alert('error: ' + result.data);
            //     }
            // });

            $.ajax({
                type: "POST",
                url: "/clientstores/clientstore",
                data: { clientname: '7ELEVEN' },
                success: function (result) {
                    console.log(result.data);
                    var data = result.data;
                    $('#store').empty();

                    $.each(data, function (key, item) {
                        var options = new Option(item.storename, item.storename);
                        $(options).html(item.storename);
                        $('#store').append(options);
                        console.log(item.storename);
                    });
                },
                error: function (result) {
                    alert('error: ' + result.data);
                }
            });

        }

    })
</script>