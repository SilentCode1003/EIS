<!-- XLSX -->
<script src="/javascripts/xlsx.full.min.js"></script>

<script>
    $(document).ready(function () {
        var dataArr = [];
        var dataTable = null;
        let requestid = '';
        let requestdate = '';
        let requestby = '';
        let newStocksArr = [];

        //MODAL
        var stocksmodal = document.getElementById("stockinModal");
        var stocksmodalspan = document.getElementById("stockinspan");

        stocksmodalspan.onclick = function () {
            stocksmodal.style.display = "none";
        }

        window.onclick = function () {
            if (event.target == stocksmodal) {
                stocksmodal.style.display = "none";
            }
        }

        $(document).on('click', "#registerBtn", function () {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            document.getElementById('register').style.display = "block";

            RegisterItemTable();
        })

        $(document).on('click', "#stockinBtn", function () {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            document.getElementById('stockin').style.display = "block";

            StockinTable();
        })

        $.ajax({
            type: "POST",
            url: "/items/brandnamedepartment",
            data: { department: 'CABLING' },
            success: function (result) {
                console.log(result.data);
                var data = result.data;

                $.each(data, function (key, item) {
                    var options = new Option(item.brandname, item.brandname);
                    $(options).html(item.brandname);
                    $('#brandname').append(options);
                    console.log(item.brandname);
                });
            },
            error: function (result) {
                alert('error: ' + result.data);
            }
        });

        $(document).on('click', "#saveBtn", function () {
            var brandname = $('#brandname').val();
            var itemtype = $('#itemtype').val();
            var itemcount = $('#itemcount').val();

            var data = [];
            data.push({
                brandname: brandname,
                itemtype: itemtype,
                itemcount: itemcount,
            })

            SaveData(data, 'button', 0);
        });

        $(document).on('change', "#brandname", function () {
            var brandname = $('#brandname').val();
            $("#itemtype").empty();

            $.ajax({
                type: "POST",
                url: "/items/itemtype",
                data: { brandname: brandname },
                success: function (result) {
                    var data = result.data;
                    console.log(result.data);

                    $.each(data, function (key, item) {
                        var options = new Option(item.itemname, item.itemname);
                        $(options).html(item.itemname);
                        $('#itemtype').append(options);
                        console.log(item.itemname);
                    });
                },
                error: function (result) {
                    alert('error: ' + result.data);
                }
            });
        });

        $(document).on('click', "#upload", async function () {
            // var data = getExcel_data('C:\Users\5L Solutions\Documents\DATA\test.xlsx', 'sheet 1');
            // console.log(data);
            await UploadProcess();
        })

        $(document).on('click', "#updateBtn", function () {
            var brandname = $('#updatebrandname').val();
            var itemtype = $('#listbrandname').val();
            var itemcount = $('#updateitemcount').val();

            var data = [];
            data.push({
                brandname: brandname,
                itemtype: itemtype,
                itemcount: itemcount,
            })

        })

        $('#stockin-tbl tbody').on('click', 'tr', function (e) {
            // var data = stocksrequest.row(this).data();
            var data = [];
            $(this).closest('tr').find('td').each(function () {
                data.push([$(this).text()]);

            });

            console.log(data);

            requestid = data[0];
            requestdate = data[1];
            requestby = data[2];
        })

        $(document).on('click', "#confirmBtn", function () {
            var requestitemTabel = $('#po-item-list').DataTable({
                'destroy': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollCollapse': true,
            });

            $.ajax({
                type: "POST",
                url: "/purchaserequest/poitems",
                data: { requestid: requestid },
                success: function (result) {
                    requestitemTabel.clear().draw();
                    var data = result.data;

                    // console.log(result.data);
                    $.each(data, (key, item) => {
                        newStocksArr.push({
                            podate: item.podate,
                            ponumber: item.ponumber,
                            brand: item.brand,
                            type: item.type,
                            quantity: item.quantity
                        })
                        requestitemTabel.row.add([item.podate, item.ponumber, item.brand, item.type, item.quantity]).draw(false);
                    })
                },
                error: function (result) {
                    error('error: ' + result);
                }
            });

            stocksmodal.style.display = "block";
        })

        $(document).on('click', "#stockinModalBtn", function () {
            // newStocksArr = JSON.stringify(newStocksArr, null, 2);

            $.ajax({
                type: "POST",
                url: "/cabling/addnewstocks",
                data: {
                    requestid: requestid,
                    requestdate: requestdate,
                    requestby: requestby,
                    data: newStocksArr,
                },
                success: function (result) {
                    success('Success!', 'Successfully added new stocks!');
                },
                error: function (result) {
                    error('error: ' + result);
                }
            });

            StockinTable();
            newStocksArr = [];
            stocksmodal.style.display = "none";
        })

        async function UploadProcess() {
            //Reference the FileUpload element.
            var fileUpload = document.getElementById("fileUpload");

            //Validate whether File is valid Excel file.
            var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xls|.xlsx|.csv|.ods)$/;
            if (regex.test(fileUpload.value.toLowerCase())) {
                if (typeof (FileReader) != "undefined") {
                    var reader = new FileReader();

                    //For Browsers other than IE.
                    if (reader.readAsBinaryString) {
                        reader.onload = function (e) {
                            GetTableFromExcel(e.target.result);
                        };
                        reader.readAsBinaryString(fileUpload.files[0]);
                    } else {
                        //For IE Browser.
                        reader.onload = function (e) {
                            var data = "";
                            var bytes = new Uint8Array(e.target.result);
                            for (var i = 0; i < bytes.byteLength; i++) {
                                data += String.fromCharCode(bytes[i]);
                            }
                            GetTableFromExcel(data);
                        };
                        reader.readAsArrayBuffer(fileUpload.files[0]);
                    }
                } else {
                    alert("This browser does not support HTML5.");
                }
            } else {
                alert("Please upload a valid Excel file.");
            }
        };

        async function GetTableFromExcel(data) {
            //Read the Excel File data in binary
            var workbook = XLSX.read(data, {
                type: 'binary'
            });

            //get the name of First Sheet.
            var Sheet = workbook.SheetNames[0];

            //Read all rows from First Sheet into an JSON array.
            var excelRows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[Sheet]);
            var columns = Object.keys(excelRows[0]);


            //Create a HTML Table element.
            var myTable = document.createElement("table");
            myTable.border = "1";

            //Add the header row.
            var row = myTable.insertRow(-1);

            //Add the header cells.
            var headerCell = document.createElement("TH");
            for (var j = 0; j < columns.length; j++) {
                headerCell = document.createElement("TH");
                headerCell.innerHTML = columns[j];
                row.appendChild(headerCell);
            }

            var dataExcelArr = [];
            //Add the data rows from Excel file.
            for (var i = 0; i < excelRows.length; i++) {
                //Add the data row.
                var data = [];
                var row = myTable.insertRow(-1);
                for (var j = 0; j < columns.length; j++) {
                    var cell = row.insertCell(-1);
                    cell.innerHTML = excelRows[i][columns[j]];
                    await data.push({
                        item: excelRows[i][columns[j]]
                    });
                }
                dataExcelArr.push({
                    brandname: data[0].item,
                    itemtype: data[1].item,
                    itemcount: data[2].item,
                });

            }
            console.log(dataExcelArr)

            await excelDataSave(dataExcelArr);

            // var ExcelTable = document.getElementById("ExcelTable");
            // ExcelTable.innerHTML = "";
            // ExcelTable.appendChild(myTable);
        };

        async function SaveData(data, caller, count) {
            var brandname = '';
            var itemtype = '';
            var itemcount = '';
            var updateby = '';
            var updatedate = '';
            var createdby = createdby == null ? 'CREATOR' : '';
            var createddate = createddate == null ? '2022-10-26' : '';

            if (caller == 'button') {
                brandname = data[0].brandname;
                itemtype = data[0].itemtype;
                itemcount = data[0].itemcount;
            }

            console.log(`${brandname} ${itemtype}`);

            var message = "";

            if (brandname == "") { message += "Brand Name " }
            if (itemtype == "") { message += "Item Type " }
            if (itemcount == "") { message += "Item Count " }


            if (message != "") { warning("Warning!", "Must fill-up " + message + " field!") }
            else {
                dataArr.push({
                    'brandname': brandname,
                    'itemtype': itemtype,
                    'itemcount': itemcount,
                    'updateby': updateby,
                    'updatedate': updatedate,
                    'createdby': createdby,
                    'createddate': createddate
                });

                var data = JSON.stringify(dataArr, null, 2);

                $.ajax({
                    type: "POST",
                    url: "/cabling/save",
                    data: {
                        brandname: brandname,
                        itemtype: itemtype,
                        data: data
                    },
                    success: function (result) {
                        if (result.msg == 'warning') {
                            warning('Warning!', `${result.data} is already registered, to update item count, click the update tab...`)
                        } else {
                            StockinTable();
                            success('Saved!', 'Data saved!')
                        }

                        dataArr = [];
                    },
                    error: function (result) {
                        error(result.data);
                    }
                });
            }
        };

        async function excelDataSave(data) {
            var dataraw = JSON.stringify(data, null, 2);

            showloader();

            await $.ajax({
                type: "POST",
                url: "/cabling/saveexceldata",
                data: {
                    data: dataraw
                },
                success: function (result) {
                    // success('Saved!', 'Data saved!')
                    // $('#item-tbl').DataTable().ajax.reload();
                    StockinTable();
                    dataArr = [];
                },
                error: function (result) {
                    error(result.data);
                }
            });

        }

        function RegisterItemTable() {
            showloader();
            dataTable = $('#item-tbl').DataTable({
                'destroy': true,
                'processing': true,
                'serverSide': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollY': 400,
                'scrollCollapse': true,
                'serverMethod': 'GET',
                'ajax': {
                    'url': '/cabling/load'
                },
                'columns': [
                    { data: 'brandname' },
                    { data: 'itemtype' },
                    { data: 'itemcount' },
                    { data: 'updateby' },
                    { data: 'updatedate' },
                ],
                initComplete: function () {
                    console.log('init complete');
                    hideload();
                }
            });
        }

        function StockinTable() {
            showloader();
            dataTableStocks = $('#stockin-tbl').DataTable({
                'destroy': true,
                'processing': true,
                'serverSide': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollY': 400,
                'scrollCollapse': true,
                'serverMethod': 'GET',
                'ajax': {
                    'url': '/cabling/stockin',
                    'dataSrc': (json) => {
                        var finalData = [];
                        var data = json.data;
                        var details = '';
                        var action = '';


                        console.log(data);
                        $.each(data, (key, item) => {

                            var dataJson = JSON.parse(item.details);
                            console.log(dataJson);
                            $.each(dataJson, (key, item) => {
                                console.log(`BRAND: ${item.brandname} ITEM TYPE: ${item.itemtype} ITEM COUNT: ${item.itemcount}`);
                                details += `BRAND: ${item.brandname} ITEM TYPE: ${item.itemtype} ITEM COUNT: ${item.itemcount}<br/>`;
                            })

                            if (item.status == 'PENDING') {
                                action = 'NO ACTIONS';
                            }
                            if (item.status == 'NEW STOCKS') {
                                action = '<button class="edit-btn" id="confirmBtn" name="confirmBtn">CONFIRM</button>';
                            }
                            if (item.status == 'DONE') {
                                action = '<button class="edit-btn" id="PrinttBtn-cabling" name="PrinttBtn-cabling">PRINT</button>';
                            }


                            finalData.push({
                                requestid: item.requestid,
                                requestby: item.requestby,
                                requestdate: item.requestdate,
                                details: details,
                                pruchasingofficer: item.pruchasingofficer,
                                accountofficer: item.accountofficer,
                                status: item.status,
                                action: action,
                            })

                            details = '';
                        })

                        return finalData;
                    },
                },
                'columnDefs': [{
                    targets: 1,
                    className: 'td-indent',
                }],
                'columns': [
                    { data: 'requestid' },
                    { data: 'requestby' },
                    { data: 'requestdate' },
                    { data: 'details' },
                    { data: 'pruchasingofficer' },
                    { data: 'accountofficer' },
                    { data: 'status' },
                    { data: 'action' },
                ],
                initComplete: function () {
                    console.log('init complete');
                    hideload();
                }
            });
        }
    })
</script>