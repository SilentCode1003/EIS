<script>
    $(document).ready(function () {
        let _requestid = '';
        let _modelname = '';
        let _itemtype = '';
        let _itemcount = '';
        let _clientname = '';
        let serialArr = [];


        LoadTable();
        var modal = document.getElementById("outgoingModal");
        var span = document.getElementById("outgoingspan");

        var modal2 = document.getElementById("outgoinBatchUploadgModal");
        var span2 = document.getElementById("outgoingbatchuploadspan");

        var modal3 = document.getElementById("assignoutgoingModal");
        var span3 = document.getElementById("assignoutgoingspan");

        var modal4 = document.getElementById("paidModal");
        var span4 = document.getElementById("paidspan");


        span.onclick = function () {
            modal.style.display = "none";
            ClearTable('outgoing-request-table');
        }

        span2.onclick = function () {
            modal2.style.display = "none";
            modal3.style.display = "block";
            ClearTable('outgoingbatchtable');
        }

        span3.onclick = function () {
            modal3.style.display = "none";
        }

        span4.onclick = function () {
            modal4.style.display = "none";
        }

        window.onclick = function (event) {
            if (event.target == modal) {
                ClearTable('outgoing-request-table');
                modal.style.display = "none";
            }

            if (event.target == modal2) {
                ClearTable('outgoingbatchtable');
                modal2.style.display = "none";
            }

            if (event.target == modal3) {
                ClearTable('outgoingbatchtable');
                modal3.style.display = "none";
            }

            if (event.target == modal4) {
                modal4.style.display = "none";
            }
        }

        $('#outgoing-tbl tbody').on('click', 'tr', function (e) {
            var data = [];
            $(this).closest('tr').find('td').each(function () {
                data.push([$(this).text()]);
            });

            console.log(data);

            _requestid = data[0];
            // _modelname = data[1];
            // _itemtype = data[2];
            // _itemcount = data[3];
            // _clientname = data[4];
        })

        $('#assign-outgoing-request-table tbody').on('click', 'tr', function (e) {
            var data = [];
            $(this).closest('tr').find('td').each(function () {
                data.push([$(this).text()]);
            });

            console.log(data);

            _requestid = data[0];
            _modelname = data[1];
            _itemtype = data[2];
            _itemcount = data[3];
            _clientname = data[4];
        })

        $('#outgoing-request-table tbody').on('click', 'tr', function (e) {
            e.preventDefault();

            if ($(this).attr('edit_type') == 'button') {
                return false;
            }

            //make div editable
            $(this).closest('div').attr('contenteditable', 'true');
            //add bg css
            $(this).addClass('edit-cost').css('padding', '5px');

            $(this).focus();
        });

        $(document).on('click', "#assignBtn", function () {
            RequestDetailsTable();
            modal3.style.display = "block";
        })

        $(document).on('click', "#assignbreakdownBtn", function () {
            var requestlistTabel = $('#outgoing-request-table').DataTable({
                'destroy': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollCollapse': true,
            });

            $.ajax({
                type: "POST",
                url: "/cyberrequest/getdetails",
                data: {
                    requestid: _requestid,
                    modelname: _modelname,
                    itemtype: _itemtype,
                },
                success: function (result) {
                    requestlistTabel.clear().draw();
                    var data = result.data;
                    var count = parseInt(_itemcount);

                    console.log(data);
                    $.each(data, function (key, value) {
                        var dataJson = value.unitserial;

                        console.log(dataJson);
                        if (dataJson == '') {
                            for (x = 0; x < count; x++) {
                                requestlistTabel.row.add([
                                    value.modelname,
                                    value.itemtype,
                                    ''
                                ]).draw(false);
                            }
                        } else {
                            dataJson = JSON.parse(dataJson);
                            console.log(dataJson);
                            $.each(dataJson, (key, item) => {
                                requestlistTabel.row.add([
                                    value.modelname,
                                    value.itemtype,
                                    item.serial
                                ]).draw(false);
                            })
                        }
                    })
                },
                error: function (result) {
                    error('error: ' + result.data);
                }
            });
            RequestDetailsTable();
            modal.style.display = "block";
        })

        $(document).on('click', "#paidBtn", function () {
            modal4.style.display = "block";
        })

        $(document).on('click', "#printBtn", function () {
            modal5.style.display = "block";
        })

        $(document).on('click', "#savetransactionBtn", async function () {
            let ponumber = $('#ponumber').val();
            let drnumber = $('#drnumber').val();
            let sinumber = $('#sinumber').val();
            let crnumber = $('#crnumber').val();

            showloader();

            if (ponumber == '' && drnumber == '' && sinumber == '' && crnumber == '') {
                warning('Warning', 'No receipt reference!');
            }
            else {
                $.ajax({
                    type: 'POST',
                    url: '/cyberrequest/transaction',
                    data: {
                        requestid: _requestid,
                        ponumber: ponumber,
                        drnumber: drnumber,
                        sinumber: sinumber,
                        crnumber: crnumber,
                    },
                    success(result) {
                        success('Saved', 'Data saved!')
                    },
                    error(result) {
                        error(result);
                    }
                });
            }
            modal4.style.display = "none";

            setTimeout(() => {
                LoadTable();
            }, 3000);
            hideload();
        })

        $(document).on('click', "#batchBtn", function () {
            ClearTable('outgoingbatchtable');
            modal3.style.display = "none";
            modal2.style.display = "block";
        })

        $(document).on('click', "#saveoutgoingBtn", function () {
            console.log('clicked!');
            var data = $('#outgoing-request-table tr');
            var dataRaw = [];
            console.log(data);
            console.log(data.length);
            var message = '';
            // var est_budget = 0;
            var purchaseDetails = [];

            var index = 1;
            for (x = 1; x < data.length; x++) {
                console.log(data[x].innerText);
                var innerData = data[x].innerText;
                innerData = innerData.split("\t");

                if (innerData[2] == "") {
                    message += `${innerData[1]} row: ${x}, `;
                } else {
                    dataRaw.push({
                        serial: innerData[2],
                    });

                    // est_budget += (parseFloat(innerData[3]) * parseFloat(innerData[2]));
                    index += 1;
                }

            }

            if (message != "") {
                warning(`No serial ${message}`);
            } else {
                // console.log(dataRaw);
                dataRaw = JSON.stringify(dataRaw, null, 2);

                $.ajax({
                    type: "POST",
                    url: "/cyberrequest/assignserial",
                    data: {
                        requestid: _requestid,
                        modelname: _modelname,
                        itemtype: _itemtype,
                        itemcount: _itemcount,
                        clientname: _clientname,
                        serials: dataRaw
                    },
                    success: function (result) {
                        success('Saved!', 'Data Saved!');

                    },
                    error: function (result) {
                        error('error: ' + result);
                    }
                });
            }
            showloader();
            setTimeout(() => {
                LoadTable();
                modal.style.display = "none";
            }, 3000)
            hideload();

            serialArr = [];
        })

        $(document).on('click', "#saveoutgoinbatchgBtn", function () {
            // console.log(dataRaw);
            var dataRaw = JSON.stringify(serialArr, null, 2);

            if (serialArr.length != 0) {
                $.ajax({
                    type: "POST",
                    url: "/cyberrequest/assignserial",
                    data: {
                        requestid: _requestid,
                        modelname: _modelname,
                        itemtype: _itemtype,
                        itemcount: _itemcount,
                        clientname: _clientname,
                        serials: dataRaw
                    },
                    success: function (result) {

                        success('Saved!', 'Data Saved!');
                    },
                    error: function (result) {
                        error('error: ' + result);
                    }
                });

                setTimeout(() => {
                    RequestDetailsTable();
                    LoadTable();
                    modal2.style.display = "none";
                    modal3.style.display = "block";
                }, 2000);
                dataRaw = [];
                serialArr = [];
            } else {
                warning('Oh no!', 'What are you doing, saving without uploading!')
            }
        })

        $(document).on('click', "#approvedBtn", function () {
            $.ajax({
                type: "POST",
                url: "/cyberrequest/approved",
                data: {
                    requestid: _requestid,
                },
                success: function (result) {
                    success('Success', 'Request approved!')
                },
                error: function (result) {
                    error('error: ' + result.data);
                }
            });

            LoadTable();
        })

        $(document).on('click', "#upload", function () {
            ClearTable('outgoing-request-table');

            UploadProcess();
        })
        //tables
        async function LoadTable() {
            showloader();

            //IT EQUIPMENT REQUEST
            cyberpowerTbl = $('#cyberpower-tbl').DataTable({
                'destroy': true,
                'processing': true,
                'serverSide': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollY': 400,
                'scrollCollapse': true,
                'serverMethod': 'GET',
                'ajax': {
                    'url': '/cyberdashboard/loadinventory',
                },
                'columns': [
                    { data: 'itemmodel' },
                    { data: 'itemtype' },
                    { data: 'itemcount' },
                ],
                initComplete: function () {
                    console.log('init complete');
                    hideload();
                }
            });


            //OUTGOING STOCKS
            outgoingTable = $('#outgoing-tbl').DataTable({
                'destroy': true,
                'processing': true,
                'serverSide': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollY': 400,
                'scrollCollapse': true,
                'serverMethod': 'GET',
                'ajax': {
                    'url': '/cyberrequest/equipmentrequestload',
                    'dataSrc': (json) => {
                        var finalData = [];
                        var data = json.data;

                        console.log(data);
                        $.each(data, (key, item) => {
                            var modelname = '';
                            var itemtype = '';
                            var itemcount = '';
                            var status = item.status;
                            var requestdate = item.requestdate;
                            var requestby = item.requestby;
                            var clientname = item.clientname;
                            var action = '';
                            var reqid = item.requestid
                            var details = '';
                            // console.log(item.details);
                            var dataJson = JSON.parse(item.details)
                            $.each(dataJson, (key, item) => {
                                details += `BRAND: ${item.modelname} ITEM TYPE: ${item.itemtype} ITEM COUNT: ${item.itemcount}<br/>`;
                            })

                            if (status == 'REQ') { action = '<button class="assign-btn" id="assignBtn" name="assignBtn">ASSIGN SERIAL</button>'; }
                            if (status == 'ALLOC') { action = '<button class="assign-btn" id="assignBtn" name="assignBtn">EDIT</button><button class="assign-btn" id="approvedBtn" name="approvedBtn">APPROVED</button>'; }
                            if (status == 'APD') { action = '<button class="assign-btn" id="paidBtn" name="paidBtn">PAID</button><button class="assign-btn" id="cancelBtn" name="cancelBtn">CANCEL</button>'; }

                            finalData.push({
                                requestid: reqid,
                                requestby: requestby,
                                requestdate: requestdate,
                                clientname: clientname,
                                details: details,
                                action: action,
                            })

                        })

                        return finalData;
                    },
                },
                'columnDefs': [{
                    targets: 1,
                    className: 'td-indent',
                }],
                'columns': [
                    { data: 'requestid' },
                    { data: 'requestby' },
                    { data: 'requestdate' },
                    { data: 'clientname' },
                    { data: 'details' },
                    { data: 'action' },
                ],
                initComplete: function () {
                    console.log('init complete');
                    hideload();
                }
            });
        }

        async function RequestDetailsTable() {
            var requestlistTabel = $('#assign-outgoing-request-table').DataTable({
                'destroy': true,
                'paging': false,
                'searching': false,
                'info': false,
                'scrollCollapse': true,
            });

            $.ajax({
                type: "POST",
                url: "/cyberrequest/requestdetails",
                data: {
                    requestid: _requestid,
                },
                success: function (result) {
                    requestlistTabel.clear().draw();
                    var data = result.data;

                    console.log(data);
                    $.each(data, (key, item) => {
                        var modelname = '';
                        var itemtype = '';
                        var itemcount = '';
                        var status = item.status;
                        var clientname = '';
                        var action = '';
                        var reqid = item.requestid
                        var dataJson = JSON.parse(item.details)

                        $.each(dataJson, (key, item) => {
                            modelname = item.modelname;
                            itemtype = item.itemtype;
                            itemcount = item.itemcount;
                            clientname = item.clientname;

                            if (status == 'REQ') { action = '<button class="assign-btn" id="assignbreakdownBtn" name="assignbreakdownBtn">ASSIGN SERIAL</button><button class="assign-btn" id="batchBtn" name="batchBtn">IMPORT EXCEL</button>'; }
                            if (status == 'ALLOC') { action = '<button class="assign-btn" id="assignbreakdownBtn" name="assignbreakdownBtn">EDIT</button>'; }
                            requestlistTabel.row.add([
                                reqid,
                                modelname,
                                itemtype,
                                itemcount,
                                action,
                            ]).draw(false);

                        })

                    })
                },
                error: function (result) {
                    error('error: ' + result.data);
                }
            });
        }

        //excel data
        function UploadProcess() {
            //Reference the FileUpload element.
            var fileUpload = document.getElementById("fileUpload");

            //Validate whether File is valid Excel file.
            var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xls|.xlsx|.csv|.ods)$/;
            if (regex.test(fileUpload.value.toLowerCase())) {
                if (typeof (FileReader) != "undefined") {
                    var reader = new FileReader();

                    //For Browsers other than IE.
                    if (reader.readAsBinaryString) {
                        reader.onload = function (e) {
                            GetTableFromExcel(e.target.result);
                        };
                        reader.readAsBinaryString(fileUpload.files[0]);
                    } else {
                        //For IE Browser.
                        reader.onload = function (e) {
                            var data = "";
                            var bytes = new Uint8Array(e.target.result);
                            for (var i = 0; i < bytes.byteLength; i++) {
                                data += String.fromCharCode(bytes[i]);
                            }
                            GetTableFromExcel(data);
                        };
                        reader.readAsArrayBuffer(fileUpload.files[0]);
                    }
                } else {
                    warning('Woops.',"This browser does not support HTML5.");
                }
            } else {
                warning('Oh no!',"Please upload a valid Excel file.");
            }
        };

        function GetTableFromExcel(data) {
            //Read the Excel File data in binary
            var workbook = XLSX.read(data, {
                type: 'binary'
            });

            //get the name of First Sheet.
            var Sheet = workbook.SheetNames[0];

            //Read all rows from First Sheet into an JSON array.
            var excelRows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[Sheet]);
            var columns = Object.keys(excelRows[0]);


            //Create a HTML Table element.
            var myTable = document.createElement("table");
            myTable.setAttribute('id', 'outgoingbatchtable');
            myTable.border = "1";

            //Add the header row.
            var row = myTable.insertRow(-1);

            //Add the header cells.
            var headerCell = document.createElement("TH");
            for (var j = 0; j < columns.length; j++) {
                headerCell = document.createElement("TH");
                headerCell.innerHTML = columns[j];
                row.appendChild(headerCell);
            }

            var dataExcelArr = [];
            //Add the data rows from Excel file.
            for (var i = 0; i < excelRows.length; i++) {
                //Add the data row.
                var data = [];
                var row = myTable.insertRow(-1);
                for (var j = 0; j < columns.length; j++) {
                    var cell = row.insertCell(-1);
                    cell.innerHTML = excelRows[i][columns[j]];
                    data.push({
                        item: excelRows[i][columns[j]]
                    });
                }
                dataExcelArr.push({
                    modelname: data[0].item,
                    itemtype: data[1].item,
                    serial: data[2].item,
                });

                serialArr.push({
                    serial: data[2].item,
                })

            }
            // console.log(dataExcelArr)

            // excelDataSave(dataExcelArr);

            var message = '';
            var count = 0;
            $.each(dataExcelArr, (key, item) => {

                if (item.itemtype != _itemtype) {
                    message += `${item.itemtype} ${item.serial}, `;
                    count += 1;
                }

            })

            if (message != '') {
                warning('Mismatch', `Incorrect Count: ${count} | Incorrect itemtype : [${message}]`);
                serialArr = [];
            } else {
                if (serialArr.length != _itemcount) {
                    warning('Mismatch', `Item count not match, itemcount request ${_itemcount} excel data count: ${serialArr.length}. Please upload again serial upload reset to 0.`)
                    serialArr = [];
                } else {
                    // excelDataSave(dataExcelArr);
                    success('Success', 'Upload Success!');
                    // var ExcelTable = document.getElementById("ExcelTable");
                    // ExcelTable.innerHTML = "";
                    // ExcelTable.appendChild(myTable);
                }
            }
        };

        // function excelDataSave(data) {
        //     var dataraw = JSON.stringify(data, null, 2);
        //     showloader();
        //     $.ajax({
        //         type: "POST",
        //         url: "/cabling/saveexceldata",
        //         data: {
        //             data: dataraw
        //         },
        //         success: function (result) {
        //             // success('Saved!', 'Data saved!')
        //             // $('#item-tbl').DataTable().ajax.reload();
        //             RegisterItemTable();
        //             dataArr = [];
        //         },
        //         error: function (result) {
        //             error(result.data);
        //         }
        //     });
        // }

    })
</script>